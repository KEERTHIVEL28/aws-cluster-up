#!/bin/bash

set -eu
set -o pipefail

PROGNAME=$(basename $0)
ACU_TOPDIR="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd -P)"
source $ACU_TOPDIR/../libexec/aws-cluster-up/common.bash

noapply=0

while getopts "n" opt; do
    case "$opt" in
	n*) noapply=1;;
    esac
done

shift $((OPTIND-1))

if [[ $# -ne 1 ]]; then
    acu_die "usage: $PROGNAME <cluster-dir>"
fi

ACU_CLUSTER_DIR=$1; shift

if [[ ! -d "$ACU_CLUSTER_DIR" ]]; then
    acu_die "directory '$ACU_CLUSTER_DIR' does not exist!"
fi

for i in $(acu_get_instances "$ACU_CLUSTER_DIR/terraform/terraform.tfstate"); do
    id=$(acu_get_instance_id "$i" "$ACU_CLUSTER_DIR/terraform/terraform.tfstate")
    cluster_name=$(basename "$ACU_CLUSTER_DIR")
    nodename=$(acu_aws_instance_nodename "$i")
    aws ec2 create-tags --resources "$id" --tags Key=Name,Value="$cluster_name-${nodename}-terminate"
done

[[ $noapply -eq 1 ]] && exit 0

cd "$ACU_CLUSTER_DIR/terraform"
terraform destroy "${ACU_TERRAFORM_AUTO_APPROVE:--auto-approve}"
